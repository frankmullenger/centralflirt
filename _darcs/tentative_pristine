hunk ./actions/inbox.php 2
-/*
- * Laconica - a distributed open-source microblogging tool
- * Copyright (C) 2008, Controlez-Vous, Inc.
+/**
+ * Laconica, the distributed open-source microblogging tool
hunk ./actions/inbox.php 5
- * This program is free software: you can redistribute it and/or modify
+ * action handler for message inbox
+ *
+ * PHP version 5
+ *
+ * LICENCE: This program is free software: you can redistribute it and/or modify
hunk ./actions/inbox.php 21
+ *
+ * @category  Message
+ * @package   Laconica
+ * @author    Evan Prodromou <evan@controlyourself.ca>
+ * @copyright 2008 Control Yourself, Inc.
+ * @license   http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License version 3.0
+ * @link      http://laconi.ca/
+ */
+
+if (!defined('LACONICA')) {
+    exit(1);
+}
+
+require_once INSTALLDIR.'/lib/mailbox.php';
+
+/**
+ * action handler for message inbox
+ *
+ * @category Message
+ * @package  Laconica
+ * @author   Evan Prodromou <evan@controlyourself.ca>
+ * @license  http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License version 3.0
+ * @link     http://laconi.ca/
+ * @see      MailboxAction
hunk ./actions/inbox.php 47
-if (!defined('LACONICA')) { exit(1); }
+class InboxAction extends MailboxAction
+{
+    /**
+     * returns the title of the page
+     *
+     * @param User $user current user
+     * @param int  $page current page
+     *
+     * @return string localised title of the page
+     *
+     * @see MailboxAction::getTitle()
+     */
+
+    function getTitle($user, $page)
+    {
+        if ($page > 1) {
+            $title = sprintf(_("Inbox for %s - page %d"), $user->nickname, $page);
+        } else {
+            $title = sprintf(_("Inbox for %s"), $user->nickname);
+        }
+        return $title;
+    }
+
+    /**
+     * retrieve the messages for this user and this page
+     *
+     * Does a query for the right messages
+     *
+     * @param User $user The current user
+     * @param int  $page The page the user is on
+     *
+     * @return Message data object with stream for messages
+     *
+     * @see MailboxAction::getMessages()
+     */
+
+    function getMessages($user, $page)
+    {
+        $message = new Message();
+
+        $message->to_profile = $user->id;
+
+        $message->orderBy('created DESC, id DESC');
+        $message->limit((($page-1)*MESSAGES_PER_PAGE), MESSAGES_PER_PAGE + 1);
+
+        if ($message->find()) {
+            return $message;
+        } else {
+            return null;
+        }
+    }
+
+    /**
+     * returns the profile we want to show with the message
+     *
+     * For inboxes, we show the sender.
+     *
+     * @param Message $message The message to get the profile for
+     *
+     * @return Profile The profile of the message sender
+     *
+     * @see MailboxAction::getMessageProfile()
+     */
hunk ./actions/inbox.php 111
-require_once(INSTALLDIR.'/lib/mailbox.php');
+    function getMessageProfile($message)
+    {
+        return $message->getFrom();
+    }
hunk ./actions/inbox.php 116
-class InboxAction extends MailboxAction {
-	
-	function get_title($user, $page) {
-		if ($page > 1) {
-			$title = sprintf(_("Inbox for %s - page %d"), $user->nickname, $page);
-		} else {
-			$title = sprintf(_("Inbox for %s"), $user->nickname);
-		}
-		return $title;
-	}
-	
-	function get_messages($user, $page) {
-		$message = new Message();
-		$message->to_profile = $user->id;
-		$message->orderBy('created DESC, id DESC');
-		$message->limit((($page-1)*MESSAGES_PER_PAGE), MESSAGES_PER_PAGE + 1);
+    /**
+     * instructions for using this page
+     *
+     * @return string localised instructions for using the page
+     */
hunk ./actions/inbox.php 122
-		if ($message->find()) {
-			return $message;
-		} else {
-			return NULL;
-		}
-	}
-	
-	function get_message_profile($message) {
-		return $message->getFrom();
-	}
-	
-	function get_instructions() {
-		return _('This is your inbox, which lists your incoming private messages.');
-	}
+    function getInstructions()
+    {
+        return _('This is your inbox, which lists your incoming private messages.');
+    }
hunk ./actions/outbox.php 2
-/*
- * Laconica - a distributed open-source microblogging tool
- * Copyright (C) 2008, Controlez-Vous, Inc.
+/**
+ * Laconica, the distributed open-source microblogging tool
hunk ./actions/outbox.php 5
- * This program is free software: you can redistribute it and/or modify
+ * action handler for message inbox
+ *
+ * PHP version 5
+ *
+ * LICENCE: This program is free software: you can redistribute it and/or modify
hunk ./actions/outbox.php 21
+ *
+ * @category  Message
+ * @package   Laconica
+ * @author    Evan Prodromou <evan@controlyourself.ca>
+ * @copyright 2008 Control Yourself, Inc.
+ * @license   http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License version 3.0
+ * @link      http://laconi.ca/
+ */
+
+if (!defined('LACONICA')) {
+    exit(1);
+}
+
+require_once INSTALLDIR.'/lib/mailbox.php';
+
+/**
+ * action handler for message outbox
+ *
+ * @category Message
+ * @package  Laconica
+ * @author   Evan Prodromou <evan@controlyourself.ca>
+ * @license  http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License version 3.0
+ * @link     http://laconi.ca/
+ * @see      MailboxAction
hunk ./actions/outbox.php 47
-if (!defined('LACONICA')) { exit(1); }
+class OutboxAction extends MailboxAction
+{
+    /**
+     * returns the title of the page
+     *
+     * @param User $user current user
+     * @param int  $page current page
+     *
+     * @return string localised title of the page
+     *
+     * @see MailboxAction::getTitle()
+     */
+
+    function getTitle($user, $page)
+    {
+        if ($page > 1) {
+            $title = sprintf(_("Outbox for %s - page %d"), $user->nickname, $page);
+        } else {
+            $title = sprintf(_("Outbox for %s"), $user->nickname);
+        }
+        return $title;
+    }
+
+    /**
+     * retrieve the messages for this user and this page
+     *
+     * Does a query for the right messages
+     *
+     * @param User $user The current user
+     * @param int  $page The page the user is on
+     *
+     * @return Message data object with stream for messages
+     *
+     * @see MailboxAction::getMessages()
+     */
+
+    function getMessages($user, $page)
+    {
+        $message = new Message();
+
+        $message->from_profile = $user->id;
+        $message->orderBy('created DESC, id DESC');
+        $message->limit((($page-1)*MESSAGES_PER_PAGE), MESSAGES_PER_PAGE + 1);
+
+        if ($message->find()) {
+            return $message;
+        } else {
+            return null;
+        }
+    }
+
+    /**
+     * returns the profile we want to show with the message
+     *
+     * For outboxes, we show the recipient.
+     *
+     * @param Message $message The message to get the profile for
+     *
+     * @return Profile The profile of the message recipient
+     *
+     * @see MailboxAction::getMessageProfile()
+     */
hunk ./actions/outbox.php 110
-require_once(INSTALLDIR.'/lib/mailbox.php');
+    function getMessageProfile($message)
+    {
+        return $message->getTo();
+    }
hunk ./actions/outbox.php 115
-class OutboxAction extends MailboxAction {
-	
-	function get_title($user, $page) {
-		if ($page > 1) {
-			$title = sprintf(_("Outbox for %s - page %d"), $user->nickname, $page);
-		} else {
-			$title = sprintf(_("Outbox for %s"), $user->nickname);
-		}
-		return $title;
-	}
-	
-	function get_messages($user, $page) {
-		$message = new Message();
-		$message->from_profile = $user->id;
-		$message->orderBy('created DESC, id DESC');
-		$message->limit((($page-1)*MESSAGES_PER_PAGE), MESSAGES_PER_PAGE + 1);
+    /**
+     * instructions for using this page
+     *
+     * @return string localised instructions for using the page
+     */
hunk ./actions/outbox.php 121
-		if ($message->find()) {
-			return $message;
-		} else {
-			return NULL;
-		}
-	}
-	
-	function get_message_profile($message) {
-		return $message->getTo();
-	}
-	
-	function get_instructions() {
-		return _('This is your outbox, which lists private messages you have sent.');
-	}
-	
+    function getInstructions()
+    {
+        return _('This is your outbox, which lists private messages you have sent.');
+    }
hunk ./lib/mailbox.php 22
- * @category  Action
+ * @category  Message
hunk ./lib/mailbox.php 41
- * @category Action
+ * @category Message
hunk ./lib/mailbox.php 94
-        $this->show_page($user, $page);
+        $this->showPage($user, $page);
hunk ./lib/mailbox.php 106
-    function get_title($user, $page)
+    function getTitle($user, $page)
hunk ./lib/mailbox.php 117
-    function get_instructions()
+    function getInstructions()
hunk ./lib/mailbox.php 128
-    function show_top()
+    function showTop()
hunk ./lib/mailbox.php 146
-    function show_page($user, $page)
+    function showPage($user, $page)
hunk ./lib/mailbox.php 148
-        common_show_header($this->get_title($user, $page),
+        common_show_header($this->getTitle($user, $page),
hunk ./lib/mailbox.php 150
-                           array($this, 'show_top'));
+                           array($this, 'showTop'));
hunk ./lib/mailbox.php 152
-        $this->show_box($user, $page);
+        $this->showBox($user, $page);
hunk ./lib/mailbox.php 157
+    /**
+     * retrieve the messages appropriate for this mailbox
+     *
+     * Does a query for the right messages
+     *
+     * @param User $user The current user
+     * @param int  $page The page the user is on
+     *
+     * @return Message data object with stream for messages
+     */
+
+    function getMessages($user, $page)
+    {
+        return null;
+    }
+
hunk ./lib/mailbox.php 184
-    function show_box($user, $page)
+    function showBox($user, $page)
hunk ./lib/mailbox.php 186
-        $message = $this->get_messages($user, $page);
+        $message = $this->getMessages($user, $page);
hunk ./lib/mailbox.php 200
-                $this->show_message($message);
+                $this->showMessage($message);
hunk ./lib/mailbox.php 224
-    function get_message_profile($message)
+    function getMessageProfile($message)
hunk ./lib/mailbox.php 237
-    function show_message($message)
+    function showMessage($message)
hunk ./lib/mailbox.php 242
-        $profile = $this->get_message_profile($message);
+        $profile = $this->getMessageProfile($message);
